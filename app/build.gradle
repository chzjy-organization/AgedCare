apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.jakewharton.butterknife'
android {
    signingConfigs {
        punuo {
            keyAlias 'hangzhoupunuokeystore'
            keyPassword '123456'
            storeFile file('../hangzhoupunuo.jks')
            storePassword '123456'
        }
    }

    defaultConfig {
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath = true
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
        ndk{
            abiFilters 'armeabi-v7a'
        }
        multiDexEnabled true
        compileSdkVersion = gradle.sdk.compileSdkVersion
        buildToolsVersion = gradle.sdk.buildToolsVersion
        applicationId gradle.sdk.packageName
        minSdkVersion gradle.sdk.minSdkVersion
        targetSdkVersion gradle.sdk.targetSdkVersion
        versionCode gradle.sdk.versionCode
        versionName gradle.sdk.versionName
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.punuo
        }
        debug {
            signingConfig signingConfigs.punuo
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    packagingOptions {
        exclude 'META-INF/proguard/androidx-annotations.pro'
    }

    applicationVariants.all {
        variant ->
            variant.outputs.all {
                output ->
                    def outputFile = output.outputFile
                    if (outputFile.name.contains("release")) {
                        def fileName = "rlph_machine_app.apk"
                        outputFileName = new File("../release/", fileName)
                    } else if (outputFile.name.contains("debug")) {
                        def fileName = "rlph_machine_app.apk"
                        outputFileName = new File("../debug/", fileName)
                    }
            }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':basesdk')
    implementation project(':module_compat')
    implementation project(':module_sip')
    implementation project(':module_home')
    kapt 'com.alibaba:arouter-compiler:1.2.2'
    kapt 'com.jakewharton:butterknife-compiler:10.0.0'
    kapt 'org.permissionsdispatcher:permissionsdispatcher-processor:4.6.0'
}
